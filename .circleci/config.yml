version: 2

vm_settings: &vm_settings
  docker:
    # https://circleci.com/docs/2.0/circleci-images/#nodejs
    - image: circleci/node:latest-browsers
  working_directory: ~/frontend

install_restore_cache: &install_restore_cache
  name: Restore cached dependencies
  keys:
    - dependencies-{{ checksum "yarn.lock" }}
    # Fall back to using the latest cache if no exact match is found
    - dependencies-

install_run: &install_run
  name: Install dependencies with Yarn, purely from the lockfile
  command: yarn install --frozen-lockfile

install_save_cache: &install_save_cache
  name: Cache installed dependencies
  paths:
    - ~/.cache/yarn/v1
    - node_modules
  key: dependencies-{{ checksum "yarn.lock" }}

jobs:

  test:
    <<: *vm_settings
    steps:
      - checkout

      # Install dependencies
      - restore_cache: *install_restore_cache
      - run: *install_run
      - save_cache: *install_save_cache

      - run:
          name: Run tests
          command: yarn test:ci

      # Store test artifacts
      - store_artifacts:
          path: tests/unit/coverage
      - store_artifacts:
          path: tests/e2e/videos
      - store_artifacts:
          path: tests/e2e/screenshots

  # deploy:
  #   <<: *vm_settings
  #   steps:
  #     # Install dependencies
  #     - restore_cache: *install_restore_cache
  #     - run: *install_run
  #     - save_cache: *install_save_cache

  #     # Build the app for production
  #     - run: yarn build

  #     ADD YOUR DEPLOYMENT PROCESS HERE
  #     https://circleci.com/docs/2.0/deployment-integrations/

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      # - deploy:
      #     # Only deploy if tests pass
      #     requires:
      #       - test
      #     # Only deploy the master branch
      #     filters:
      #       branches:
      #         only: master
